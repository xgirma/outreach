{
  "openapi": "3.0.0",
  "info": {
    "title": "Outreach API",
    "description": "Outreach admin platform API.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{protocol}://localhost:{port}/api/{basePath}",
      "description": "Sandbox server (uses test data)",
      "variables": {
        "protocol": {
          "enum": ["http", "https"],
          "default": "http"
        },
        "port": {
          "enum": ["3005", "3000"],
          "default": "3005"
        },
        "basePath": {
          "default": "v1"
        }
      }
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "tags": ["Info"],
        "description": "Returns all church information",
        "summary": "Returns all church information",
        "responses": {
          "200": {
            "description": "A list of church information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "am": {
                        "$ref": "#/components/schemas/ChurchInfo"
                      },
                      "en": {
                        "$ref": "#/components/schemas/ChurchInfo"
                      },
                      "_id": {
                        "$ref": "#/components/parameters/_id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Info"],
        "description": "Add a new church information",
        "summary": "Add church information",
        "requestBody": {
          "description": "Church information to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": "object",
                  "am": {
                    "$ref": "#/components/schemas/ChurchInfo"
                  },
                  "en": {
                    "$ref": "#/components/schemas/ChurchInfo"
                  },
                  "_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 1000000,
                    "description": "ID",
                    "example": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/ChurchInfo"
                    },
                    "en": {
                      "$ref": "#/components/schemas/ChurchInfo"
                    },
                    "_id": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0,
                      "maximum": 1000000,
                      "description": "ID",
                      "example": "1234"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/info/{id}": {
      "get": {
        "tags": ["Info"],
        "description": "Return a church information matches an ID",
        "summary": "Returns a church information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Info ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/ChurchInfo"
                    },
                    "en": {
                      "$ref": "#/components/schemas/ChurchInfo"
                    },
                    "_id": {
                      "$ref": "#/components/parameters/_id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Info"],
        "description": "Updates a church information matches an ID",
        "summary": "Updates a church information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Info ID",
            "schema": {
              "type": "string"
            },
            "example": "4"
          }
        ],
        "requestBody": {
          "description": "Church information to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": "object",
                  "am": {
                    "$ref": "#/components/schemas/ChurchInfo"
                  },
                  "en": {
                    "$ref": "#/components/schemas/ChurchInfo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/ChurchInfo"
                    },
                    "en": {
                      "$ref": "#/components/schemas/ChurchInfo"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Info"],
        "description": "Deletes a church information matches an ID",
        "summary": "Deletes a church information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Info ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted church information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "am": {
                        "$ref": "#/components/schemas/ChurchInfo"
                      },
                      "en": {
                        "$ref": "#/components/schemas/ChurchInfo"
                      },
                      "_id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 1000000,
                        "description": "ID",
                        "example": "1234"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/intro": {
      "get": {
        "tags": ["Intro"],
        "description": "Home page main content",
        "summary": "Returns home page content detail",
        "responses": {
          "200": {
            "description": "Home page content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "am": {
                        "$ref": "#/components/schemas/Intro"
                      },
                      "en": {
                        "$ref": "#/components/schemas/Intro"
                      },
                      "_id": {
                        "$ref": "#/components/parameters/_id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Intro"],
        "description": "Add the main content of the home page",
        "summary": "Adds home page main content",
        "requestBody": {
          "description": "Home page content to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": "object",
                  "am": {
                    "$ref": "#/components/schemas/Intro"
                  },
                  "en": {
                    "$ref": "#/components/schemas/Intro"
                  },
                  "_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 1000000,
                    "description": "ID",
                    "example": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/Intro"
                    },
                    "en": {
                      "$ref": "#/components/schemas/Intro"
                    },
                    "_id": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0,
                      "maximum": 1000000,
                      "description": "ID",
                      "example": "1234"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/intro/{id}": {
      "get": {
        "tags": ["Intro"],
        "description": "Return a home page main content by ID",
        "summary": "Returns a home page main content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Intro ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/Intro"
                    },
                    "en": {
                      "$ref": "#/components/schemas/Intro"
                    },
                    "_id": {
                      "$ref": "#/components/parameters/_id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Intro"],
        "description": "Updates a home page main content by ID",
        "summary": "Updates a home page main content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Intro ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "requestBody": {
          "description": "Home page content to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": "object",
                  "am": {
                    "$ref": "#/components/schemas/Intro"
                  },
                  "en": {
                    "$ref": "#/components/schemas/Intro"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/Intro"
                    },
                    "en": {
                      "$ref": "#/components/schemas/Intro"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Intro"],
        "description": "Deletes a home page main content matches an ID",
        "summary": "Deletes a home page main content",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Intro ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted a home page main content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "am": {
                        "$ref": "#/components/schemas/Intro"
                      },
                      "en": {
                        "$ref": "#/components/schemas/Intro"
                      },
                      "_id": {
                        "$ref": "#/components/parameters/_id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "get": {
        "tags": ["Event"],
        "description": "Event details",
        "summary": "Returns event details",
        "responses": {
          "200": {
            "description": "Event detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "am": {
                        "$ref": "#/components/schemas/Event"
                      },
                      "en": {
                        "$ref": "#/components/schemas/Event"
                      },
                      "_id": {
                        "$ref": "#/components/parameters/_id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Event"],
        "description": "Add event",
        "summary": "Add event",
        "requestBody": {
          "description": "Event to add",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": "object",
                  "am": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "en": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "_id": {
                    "$ref": "#/components/parameters/_id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/Event"
                    },
                    "en": {
                      "$ref": "#/components/schemas/Event"
                    },
                    "_id": {
                      "$ref": "#/components/parameters/_id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/{id}": {
      "get": {
        "tags": ["Event"],
        "description": "Return event by ID",
        "summary": "Returns event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/Event"
                    },
                    "en": {
                      "$ref": "#/components/schemas/Event"
                    },
                    "_id": {
                      "$ref": "#/components/parameters/_id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Event"],
        "description": "Updates event by ID",
        "summary": "Updates event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "requestBody": {
          "description": "Event update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": "object",
                  "am": {
                    "$ref": "#/components/schemas/Event"
                  },
                  "en": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": "object",
                    "am": {
                      "$ref": "#/components/schemas/Event"
                    },
                    "en": {
                      "$ref": "#/components/schemas/Event"
                    },
                    "_id": {
                      "$ref": "#/components/parameters/_id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Event"],
        "description": "Deletes event by ID",
        "summary": "Deletes event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event ID",
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted event",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": "object",
                      "am": {
                        "$ref": "#/components/schemas/Event"
                      },
                      "en": {
                        "$ref": "#/components/schemas/Event"
                      },
                      "_id": {
                        "$ref": "#/components/schemas/_id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Intro": {
        "required": ["title", "date", "intro"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "example": "እንኳን ለጌታችን ለመድኃኒታችን ለኢየሱስ ክርስቶስ የዕርገት በዓል አደረሳችሁ!!!"
          },
          "date": { "$ref": "#/components/parameters/date" },
          "author": { "type": "string", "maxLength": 100, "example": "Diakon Mezmur Mekasha" },
          "intro": {
            "type": "string",
            "example":
              "የትንሣኤያችን በኩር የሆነው ጌታ በመቃብሩ ቦታ ሥርዓትን እያስተማረ አልፎ አልፎም በግልጥ እየታየ ፍርሐታቸውን እያስወገደ አይሑድ እንደሚሉት ሥጋውንም ደቀመዛሙርቱ እንዳልሰረቁት ይልቁንም በሞት ላይ ሥልጣንኑን አሳይቶ መቃብሩን ባዶ አድርጐ በትንሣኤው አለት ላይ ያቆመን፣ ሞት በእርሱ እንደተሸነፈ የማይታየው እየታየ፣ ዘመን የማይቆጠርለት፣ ዘላለማዊ ጌታ የማይዳሰሰው እየተዳሰሰ ለ40 ቀናት ያኽል ቆይቶ ተከታዮቹን ሐዋርያትን ወደ ቢታንያ አወጣቸው። እያዩት በምስጋና ወደሰማይ ዐረገ። እንዲህ ተብሎ በነብዩ ዳዊት እንደተፃፈው፡- “ዐረገ እግዚአብሔር በይባቤ ወእግዚእነ በቃለ ቀርን ዘምሩ ለአምላክነ ዘምሩ” እግዚአብሔር በመለከት ድምጽ ዐረገ፣ ዘምሩ ለአምላካችን ዘምሩ፣ ዘምሩ ለንጉሣችን ዘምሩ (መዝ 46÷5) አምላካችን ወደ ሰማይ ከማረጉ በፊት ለደቀመዛሙርቱ የገባላቸው ቃልኪዳን፡ ምስክሮቼ ትሆናላችሁ፡፡ (ሉቃ 24÷48) ደቀመዛሙርቱ ያዩትንና የሰሙትን ሞትን አሸንፎ የተነሣውን ጌታ ለዓለም ሁሉ ምስክሮች ሆነዋል። በሕይወት ዘመናቸው ሁሉ የዓላውያንን ነገሥታት፣ የቄሳሮችን ዛቻና ማስፈራሪያ አንዳችም ሳይፈሩ ከምድር ዳርቻ እስከምድር ዳርቻ ድረስ ሁሉን እያጡና መከራ እየተቀበሉ፣ እየታሰሩና እየተገረፉ ምስክሮች ሆነዋል። ኢየሱስ ክርስቶስ ከዚህ በኋላ ስሙን አትጥሩና በስሙም አታስተምሩ እያሏቸው በሸንጐ ፊት ሲያቆሟቸው፣ ሲገርፏቸው ደስ እያላቸው ከሸንጐ ፊት ይወጡ ነበር፡፡ (የሐዋ 5÷40)። ስለ ስሙ ምስክር መሆን መነቀፍና መታሰር፣ መደብደብ እንዴት ደስ ይላል!። እኛም እንደ ደቀመዛሙርቱ ማንንም ሳንፈራ አፋችንን ሞልተን ስለ ስሙ እየመሰከርን ሁሉን ብናጣም ሞታችንን በሞቱ ድል የነሣልንን የሚቃወመንን ጠላታችንን በመስቀል ላይ ተሰቅሎ ያስወገደልንን፣ እረፍትና ሰላም የሰጠንን፣ ጨለማውን ገፎ ብርሐንን ያጐናፀፈንን፣ ያለፈውን ታሪካችንን በነበር ላስቀረልን ምስክሮች እንሁን።"
          }
        }
      },
      "Address": {
        "required": ["street", "city", "country"],
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "maxLength": 200,
            "description": "Street name",
            "example": "1234 EastLake Ave East"
          },
          "city": {
            "type": "string",
            "maxLength": 50,
            "description": "City name",
            "example": "Seattle"
          },
          "state": {
            "type": "string",
            "maxLength": 50,
            "description": "State name",
            "example": "WA"
          },
          "zip": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1000000,
            "description": "Zip code",
            "example": "98201"
          },
          "country": {
            "type": "string",
            "maxLength": 50,
            "description": "Country name",
            "example": "United States"
          }
        }
      },
      "BasicInfo": {
        "required": ["name", "denomination", "phone"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "description": "Church name",
            "example": "St. George Ethiopian Orthodox Tewahedo Church"
          },
          "denomination": {
            "type": "string",
            "maxLength": 100,
            "description": "Church denomination",
            "example": "Ethiopian Orthodox Tewahedo Church"
          },
          "phone": { "$ref": "#/components/parameters/phone" },
          "email": {
            "$ref": "#/components/parameters/email"
          }
        }
      },
      "Bible": {
        "required": ["verse", "from"],
        "type": "object",
        "properties": {
          "verse": {
            "type": "string",
            "maxLength": 500,
            "description": "Bible verses or quotes",
            "example":
              "And I tell you that you are Peter,and on this rock I will build my church, and the gates of Hadeswill not overcome it."
          },
          "from": {
            "type": "string",
            "maxLength": 50,
            "description": "Bible verses or quotes reference",
            "example": "Matthew 16:18"
          }
        }
      },
      "ChurchInfo": {
        "type": "object",
        "allOf": [
          { "$ref": "#/components/schemas/BasicInfo" },
          {
            "properties": {
              "address": {
                "$ref": "#/components/schemas/Address"
              }
            }
          },
          {
            "properties": {
              "bible": {
                "$ref": "#/components/schemas/Bible"
              }
            }
          }
        ]
      },
      "Event": {
        "required": ["title", "date", "phone"],
        "type": "object",
        "properties": {
          "title": { "type": "string", "maxLength": 200, "example": "የትንሣኤያችን በኩር የሆነው ጌታ በመቃብሩ" },
          "date": {
            "properties": {
              "from": { "$ref": "#/components/parameters/date" },
              "to": { "$ref": "#/components/parameters/date" }
            }
          },
          "description": {
            "type": "string",
            "example":
              "የትንሣኤያችን በኩር የሆነው ጌታ በመቃብሩ ቦታ ሥርዓትን እያስተማረ አልፎ አልፎም በግልጥ እየታየ ፍርሐታቸውን እያስወገደ አይሑድ እንደሚሉት ሥጋውንም ደቀመዛሙርቱ እንዳልሰረቁት ይልቁንም በሞት ላይ ሥልጣንኑን አሳይቶ መቃብሩን ባዶ አድርጐ በትንሣኤው አለት ላይ ያቆመን፣ ሞት በእርሱ እንደተሸነፈ የማይታየው እየታየ፣ ዘመን የማይቆጠርለት፣ ዘላለማዊ ጌታ የማይዳሰሰው እየተዳሰሰ ለ40 ቀናት ያኽል ቆይቶ ተከታዮቹን ሐዋርያትን ወደ ቢታንያ አወጣቸው። እያዩት በምስጋና ወደሰማይ ዐረገ።"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "email": { "$ref": "#/components/parameters/email" },
          "phone": { "$ref": "#/components/parameters/phone" }
        }
      }
    },
    "parameters": {
      "_id": {
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "maximum": 1000000,
        "description": "ID",
        "example": "1234"
      },
      "date": {
        "type": "string",
        "format": "date",
        "example": "2018-09-07T10:40:52Z"
      },
      "email": {
        "type": "string",
        "format": "email",
        "description": "Church main contact email",
        "example": "info@gedam.org"
      },
      "phone": {
        "type": "string",
        "maxLength": 20,
        "description": "Church main contact phone number",
        "example": "(425) 329 - 9092"
      }
    }
  }
}
